//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Componentns.Player componentnsPlayer { get { return (Componentns.Player)GetComponent(GameComponentsLookup.ComponentnsPlayer); } }
    public bool hasComponentnsPlayer { get { return HasComponent(GameComponentsLookup.ComponentnsPlayer); } }

    public void AddComponentnsPlayer(int newIdInventory) {
        var index = GameComponentsLookup.ComponentnsPlayer;
        var component = (Componentns.Player)CreateComponent(index, typeof(Componentns.Player));
        component.IdInventory = newIdInventory;
        AddComponent(index, component);
    }

    public void ReplaceComponentnsPlayer(int newIdInventory) {
        var index = GameComponentsLookup.ComponentnsPlayer;
        var component = (Componentns.Player)CreateComponent(index, typeof(Componentns.Player));
        component.IdInventory = newIdInventory;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentnsPlayer() {
        RemoveComponent(GameComponentsLookup.ComponentnsPlayer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentnsPlayer;

    public static Entitas.IMatcher<GameEntity> ComponentnsPlayer {
        get {
            if (_matcherComponentnsPlayer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentnsPlayer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentnsPlayer = matcher;
            }

            return _matcherComponentnsPlayer;
        }
    }
}
